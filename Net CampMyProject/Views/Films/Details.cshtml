@using Net_CampMyProject.Data.Models
@using Net_CampMyProject.Controllers
@model Net_CampMyProject.Data.Models.Film

@{
    ViewData["Title"] = "Details";
    var isAdmin = User.IsInRole(Roles.Admin);
    var u = Model.MyRatings.Where(c => c.MyRating == true).Count();
    var y = Model.MyRatings.Count();
    var p = (u*1.0 / y) * 100;
    var p1 = 100 - p;
}

<div>
    <div class="w-75 m-1">
        <h4>@Model.Title</h4>
        <hr>
    </div>

    <dl class="row">
        @if (isAdmin)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Id)
            </dd>
        }
        @if (isAdmin)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Title)
            </dd>
        }
        @if (Model.ImgUrl != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImgUrl)
            </dt>

            <dd class="col-sm-10">
                <img src="@Model.ImgUrl" />
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genres)
        </dt>
        <dd class="col-sm-10">
            @foreach (var item in Model.Genres)
            {
                <span> @item.Genre.GenreType ||</span>
            }
        </dd>
        @if (Model.Duration != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Duration)
            </dt>
            <dd class="col-sm-10">
                @Model.Duration
            </dd>
        }
        @if (Model.TrailerUrl != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TrailerUrl)
            </dt>
            <dd class="col-sm-10">
                <iframe width="560" height="315" src="@Model.TrailerUrl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd class="col-sm-10">
            @Model.ReleaseDate.ToShortDateString()
        </dd>
        @if (Model.Languages != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Budget)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Budget)
            </dd>
        }

        @if (Model.Languages != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Languages)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Languages)
            </dd>
        }

        @if (Model.Awards != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Awards)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Awards)
            </dd>
        }

        @if (Model.BoxOffice != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BoxOffice)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BoxOffice)
            </dd>
        }

        @if (Model.Nominations != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Nominations)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Nominations)
            </dd>
        }

        @if (Model.Persons.Where(c => c.Role == FilmPersonRole.Director).FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @nameof(FilmPersonRole.Director)
            </dt>

            <dd class="col-sm-10">
                @foreach (var i in Model.Persons.Where(c => c.Role == FilmPersonRole.Director))
                {
                    <a asp-action="Details" asp-controller="Persons" asp-route-id="@i.Person.Id">@i.Person.Name</a>
                }
            </dd>
        }

        @if (Model.Persons.Where(c => c.Role == FilmPersonRole.Producer).FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @nameof(FilmPersonRole.Producer)
            </dt>
            <dd class="col-sm-10">
                @foreach (var i in Model.Persons.Where(c => c.Role == FilmPersonRole.Producer))
                {
                    <a asp-action="Details" asp-controller="Persons" asp-route-id="@i.Person.Id">@i.Person.Name</a>
                }
            </dd>
        }

        @if (Model.Persons.Where(c => c.Role == FilmPersonRole.ExecutiveProducers).FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @nameof(FilmPersonRole.ExecutiveProducers)
            </dt>
            <dd class="col-sm-10">
                @foreach (var i in Model.Persons.Where(c => c.Role == FilmPersonRole.ExecutiveProducers))
                {
                    <a asp-action="Details" asp-controller="Persons" asp-route-id="@i.Person.Id">@i.Person.Name</a>
                }
            </dd>
        }

        @if (Model.Persons.Where(c => c.Role == FilmPersonRole.Composer).FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @nameof(FilmPersonRole.Composer)
            </dt>
            <dd class="col-sm-10">
                @foreach (var i in Model.Persons.Where(c => c.Role == FilmPersonRole.Composer))
                {
                    <a asp-action="Details" asp-controller="Persons" asp-route-id="@i.Person.Id">@i.Person.Name</a>
                }
            </dd>
        }

        @if (Model.Persons.Where(c => c.Role == FilmPersonRole.Screenplay).FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @nameof(FilmPersonRole.Screenplay)
            </dt>
            <dd class="col-sm-10">
                @foreach (var i in Model.Persons.Where(c => c.Role == FilmPersonRole.Screenplay))
                {
                    <a asp-action="Details" asp-controller="Persons" asp-route-id="@i.Person.Id">@i.Person.Name</a>
                }
            </dd>
        }

        @if (Model.Persons.Where(c => c.Role == FilmPersonRole.StoryBy).FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @nameof(FilmPersonRole.StoryBy)
            </dt>
            <dd class="col-sm-10">
                @foreach (var i in Model.Persons.Where(c => c.Role == FilmPersonRole.StoryBy))
                {
                    <a asp-action="Details" asp-controller="Persons" asp-route-id="@i.Person.Id">@i.Person.Name</a>
                }
            </dd>
        }

        @if (Model.Persons.Where(c => c.Role == FilmPersonRole.Cast).FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @nameof(FilmPersonRole.Cast)
            </dt>
            <dd class="col-sm-10">
                @foreach (var i in Model.Persons.Where(c => c.Role == FilmPersonRole.Cast))
                {
                    <a asp-action="Details" asp-controller="Persons" asp-route-id="@i.Person.Id">@i.Person.Name</a>
                }
            </dd>
        }
        @if (Model.Ratings.FirstOrDefault() != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ratings)
            </dt>
            <dd class="col-sm-10">
                @foreach (var source in Model.Ratings)
                {
                    <div>
                        <a href="@source.Source.ResourceWebsite">@source.Rating.Trim().Split(" ").FirstOrDefault().Trim()</a>

                    </div>
                }
            </dd>
        }
        @if (Model.Story != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Story)
            </dt>
            <dd class="col-sm-10">
                @Model.Story
            </dd>
        }
    </dl>

    <div>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        <a asp-action="Index">Back to List</a>
    </div>


    <h4>My Rating:</h4>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="CreateOrUpdate" asp-controller="MyFilmRatings">

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input hidden="hidden" name="@nameof(MyFilmRating.FilmId)" value="@Model.Id" class="form-control"/>

                <div class="form-group form-check">
                    <div class="form-group">

                        @{
                            var likesCount = Model.MyRatings.Count(c => c.MyRating);
                            var dislikesCount = Model.MyRatings.Count(c => !c.MyRating);
                        }

                        <button class="btn btn-success btn-lg" name="@nameof(MyFilmRating.MyRating)" value="true" title="Likes">@likesCount</button> :
                        <button class="btn btn-danger btn-lg" name="@nameof(MyFilmRating.MyRating)" value="false" title="Dislikes">@dislikesCount</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    @if (double.IsNaN(p) == false)
    {
        <div class="progress bg-danger">
            <div class="progress-bar bg-success" role="progressbar" style="width:@p%" aria-valuenow="@p" aria-valuemin="0" aria-valuemax="100">@Math.Round(p, 1)%</div>
            <div class="progress-bar bg-danger" role="progressbar" style="width:@p1%">@Math.Round(p1, 1)%</div>
        </div>
    }

    <h4>Add Comment:</h4>

    <div class="form-group">
        <form asp-action="Create" asp-controller="Comments">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input hidden="hidden" name="@nameof(Comment.FilmId)" value="@Model.Id" class="form-control" />

            <div class="form-group">
                <textarea class="form-control" name="@nameof(Comment.Content)" rows="3" placeholder="Write your comment"></textarea>
            </div>

            <div class="form-group text-right">
                <input type="submit" value="Add comment" class="btn btn-primary" />
            </div>
        </form>
    </div>
    @if (Model.Comments.Count != 0)
    {
        <h2>Comments(@Model.Comments.Count)</h2>
    }
    @foreach (var item in Model.Comments.OrderByDescending(c => c.DateTime).Take(10))
    {
        <div class="shadow-lg p-3 mb-2 bg-white rounded">
            <div class="row mx-md-n5">
                <div class="col px-md-5">
                    <div class="p-3 border bg-light">
                        <div class="media-body">
                            <h4> @Html.DisplayFor(modelItem => item.Author.UserName) </h4>
                            <p> @Html.DisplayFor(modelItem => item.Content)</p>
                        </div>
                        <div class="text-right"><small><i>Posted on  @Html.DisplayFor(modelItem => item.DateTime)</i></small></div>
                        <div>
                            @if (User.Identity.Name == item.Author.UserName | isAdmin)
                            {
                                <a asp-controller="Comments" asp-action="Edit" asp-route-id="@item.Id">Edit |</a>
                                <a asp-controller="Comments" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            }
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
</div>
